pipeline {
    agent any
    tools {
        maven 'MAVEN'
    }
    stages {
        stage("code checkout") {
            steps {
                git credentialsId: 'jenkins-github', url: 'https://github.com/BalaDevopsForYou/bala_java.git', branch: 'master'
            }
        }
        stage('build the application') {
            steps {
                sh 'mvn clean package'
            }
        }
        stage('sonar-analysis') {
            environment {
                SONAR_URL = 'http://54.236.44.132:9000'
            }
            steps {
                script {
                    withCredentials([string(credentialsId: 'jenkins-sonar', variable: 'SONAR_TOKEN')]) {
                        withSonarQubeEnv('SONAR') {
                            sh "mvn sonar:sonar -Dsonar.host.url=$SONAR_URL -Dsonar.login=$SONAR_TOKEN"
                        }
                    }
                }
            }
        }
        stage('sonar-quality-gate-check') {
            when {
                expression { currentBuild.resultIsBetterOrEqualTo('SUCCESS') }
            }
            steps {
                withSonarQubeEnv('SONAR') {
                    timeout(time: 5, unit: 'MINUTES') {
                        script {
                            def qg = waitForQualityGate()
                            if (qg.status != 'OK') {
                                error "Pipeline aborted due to quality gate failure: ${qg.status}"
                            }
                        }
                    }
                }
            }
        }
    }
    post {
        success {
            echo 'Build was successful'
        }
        failure {
            echo 'Build has failed'
        }
    }
}
